import React from "react";
import { useState } from "react";
import { AutoComplete } from "src/components/data-entry/AutoComplete/AutoComplete";
import { IAutoCompleteProps } from "src/components/data-entry/AutoComplete/AutoComplete";
import { Meta } from "@storybook/react";
import { StoryObj } from "@storybook/react";

const baseOptions = [
  { label: "The quick brown fox jumps over the lazy dog", value: 1 },
  { label: "Waxy and quivering, jocks fumble the pizza", value: 2 },
  { label: "When zombies arrive, quickly fax judge Pat", value: 3 },
  { label: "Pack my red box with five dozen quality jugs", value: 4 },
  { label: "The quick onyx goblin jumps over the lazy dwarf", value: 5 },
];

const meta: Meta<typeof AutoComplete> = {
  title: "Aquarium/Data Entry/AutoComplete",
  component: props => {
    const [value, setValue] = useState<IAutoCompleteProps["value"]>("");
    const [options, setOptions] = useState<IAutoCompleteProps["options"]>([]);

    let onSearch = (text: string) => setOptions(getPanelValue(text));
    const onSelect = (value: string) => { console.log("you selected value: " + value); };

    const getPanelValue = (searchText: string): IAutoCompleteProps["options"] => {
      if (!searchText) return [];
      return baseOptions.filter(o => o.label.toLowerCase().includes(searchText.toLowerCase()));
    };


    return (<>
      <AutoComplete
        {...props}
        value={value}
        options={options}
        onSelect={onSelect}
        onSearch={onSearch}
        onChange={setValue}/>
    </>);
  },

  args: {
    allowClear: false,
    autoFocus: false,
    backfill: false,
    bordered: true,
    defaultActiveFirstOption: true,
    options: baseOptions,
    defaultOpen: undefined,
    defaultValue: undefined,
    disabled: false,
    popupClassName: undefined,
    // filterOption: true,
    open: undefined,
    placeholder: "Search AutoComplete",
    status: undefined,
    style: { width: 200 },
    value: undefined,
    onBlur: () => { console.log("Blur Event"); },
    onChange: (value) => { alert(`Selected Value: ${value}`); },
    onDropdownVisibleChange: (open) => { console.log(`Dropdown Open: ${open}`); },
    onFocus: () => { console.log("Focus Event"); },
    onSearch: (value) => { alert(`Search Value: ${value}`); },
    onSelect: (value, option) => { alert(`Selected Value: ${value}, Option: ${option.label}`); },
    onClear: () => { alert("Clear Event"); },
  },
  argTypes: {
    status: {
      control: "select",
      options: ["error", "warning"],
    },
  },
};
export default meta;


type Story = StoryObj<typeof AutoComplete>

/*
  Initial story templates generated by AI.
  Customize the stories based on specific requirements.
*/


export const Primary: Story = {};

export const ClearButton: Story = {
  args: {
    allowClear: true,
  },
};

export const Placeholder: Story = {
  args: {
    placeholder: "Custom Placeholder Text",
  },
};

export const Disabled: Story = {
  args: {
    disabled: true,
  },
};

export const NotFound: Story = {
  args: {
    notFoundContent: <>Custom Not Found Component goes here</>,
  },
};