import { useState } from 'react'
import { Icon, Input } from 'src/components'
import { type Meta, type StoryObj } from '@storybook/react'
import { Space } from 'src/components'

const meta: Meta<typeof Input> = {
  title: 'Components/Data Entry/Input',
  component: Input,

  args: {
    placeholder: 'Input Placeholder',
    disabled: false,
    maxLength: undefined,
    status: undefined,
    size: 'middle',
    type: 'text',
    addonBefore: undefined,
    allowClear: false,
    value: '',
    onChange: e => {
      console.log('Input changed: ' + e.target.value)
    },
    onPressEnter: e => {
      console.log('Enter key pressed: ' + String(e))
    },
  },

  argTypes: {
    maxLength: {
      control: 'number',
    },
    status: {
      control: 'select',
      options: ['warning', 'error', 'default'],
    },
    size: {
      control: 'select',
      options: ['small', 'medium', 'large'],
    },
  },
}
export default meta

type Story = StoryObj<typeof Input>

/*
  Initial story templates generated by AI.
  Customize the stories based on specific requirements.
*/

export const Primary: Story = {
  args: {
    value: '',
  },
  render: args => {
    const [value, setValue] = useState(args.value ?? '')

    return (
      <Input
        {...args}
        value={value}
        onChange={e => {
          setValue(e.target.value)
          args.onChange?.(e)
        }}
      />
    )
  },
}

export const TextArea: Story = {
  render: () => {
    return (
      <Input.TextArea size="middle" autoSize={{ minRows: 2 }} placeholder="Description (optional)">
        Test
      </Input.TextArea>
    )
  },
}

export const WithSearchAddon: Story = {
  render: () => {
    return (
      <Space>
        <Input
          placeholder="Search"
          allowClear
          autoFocus
          addonBefore={<Icon name="search" size="sm" color="default" />}
        />
      </Space>
    )
  },
}
