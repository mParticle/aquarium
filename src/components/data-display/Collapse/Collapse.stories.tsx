import MinusSquareOutlined from '@ant-design/icons/MinusSquareOutlined'
import PlusSquareOutlined from '@ant-design/icons/PlusSquareOutlined'
import { type Meta, type StoryObj } from '@storybook/react'
import { ConfigProvider, Select } from 'src/components'
import { Collapse } from 'src/components/data-display/Collapse/Collapse'
import { type ICollapseProps } from 'src/components/data-display/Collapse/Collapse'

const items: ICollapseProps['items'] = [
  {
    key: '1',
    label: 'Environment',
    children: (
      <>
        <Select
          style={{ width: '200px' }}
          options={[
            { value: 'development', label: 'Development' },
            { value: 'production', label: 'Production' },
          ]}
        />
      </>
    ),
  },
  {
    key: '2',
    label: 'Inputs',
    children: (
      <Select
        mode="tags"
        style={{ width: '200px' }}
        options={[
          { value: 'Braze', label: 'Braze' },
          { value: 'mP Analytics', label: 'mP Analytics' },
          { value: 'Cortex', label: 'Cortex' },
          { value: 'Applytics', label: 'Applytics' },
          { value: 'Google Analytics', label: 'Google Analytics' },
        ]}
      />
    ),
  },
]

const meta: Meta<typeof Collapse> = {
  title: 'Components/Data Display/Collapse',
  component: props => <Collapse items={items} {...props} />,

  args: {
    defaultActiveKey: undefined,
    expandIcon: undefined,
    ghost: false,
    items,
    onChange: (key: string | string[]) => {
      console.log(key)
    },
  },
}
export default meta

type Story = StoryObj<typeof Collapse>

/*
  Initial story templates generated by AI.
  Customize the stories based on specific requirements.
*/

export const GhostCollapse: Story = {
  render: () => {
    return (
      <ConfigProvider
        theme={{
          components: {
            Collapse: {
              headerPadding: '2px 0',
              contentPadding: '0 24px',
            },
          },
        }}>
        <Collapse
          ghost
          expandIcon={({ isActive }): React.JSX.Element =>
            isActive ? <MinusSquareOutlined /> : <PlusSquareOutlined />
          }
          items={items}
        />
      </ConfigProvider>
    )
  },
}
