import { type Meta, type StoryObj } from '@storybook/react'
import { Icon } from 'src/components'
import { Pagination } from 'src/components/navigation/Pagination/Pagination'
import { ExampleStory } from 'src/utils/ExampleStory'
import { type IPaginationProps } from 'src/components/navigation/Pagination/Pagination'
import { useState } from 'react'

const meta: Meta<typeof Pagination> = {
  title: 'Aquarium/Navigation/Pagination',
  component: Pagination,

  args: {
    current: 1,
    defaultCurrent: 1,
    defaultPageSize: 10,
    disabled: false,
    hideOnSinglePage: false,
    itemRender: (page, type, originalElement) => (type === 'page' ? <a>{page}</a> : originalElement),
    pageSize: 10,
    pageSizeOptions: [10, 20, 50, 100],
    responsive: false,
    showLessItems: false,
    showQuickJumper: false,
    showSizeChanger: false,
    showTitle: true,
    showTotal: (total, range) => `Total ${total} items`,
    simple: false,
    size: 'default',
    total: 27,
    onChange: (page, pageSize) => {
      alert(`Page changed to ${page}, Page Size: ${pageSize}`)
    },
    onShowSizeChange: (current, size) => {
      alert(`Page Size changed to ${size}, Current Page: ${current}`)
    },
  },
}
export default meta

type Story = StoryObj<typeof Pagination>

/*
  Initial story templates generated by AI.
  Customize the stories based on specific requirements.
*/

export const Primary: Story = {}

export const SmallSize: Story = {
  args: {
    size: 'small',
  },
}

export const ResponsivePagination: Story = {
  args: {
    responsive: true,
  },
}

export const ShowQuickJumperWithButton: Story = {
  args: {
    showQuickJumper: { goButton: <Icon name="alicorn" /> },
  },
}

export const ShowSizeChangerDynamic: Story = {
  args: {
    showSizeChanger: true,
    total: 60,
  },
}

export const SimplePagination: Story = {
  args: {
    simple: true,
  },
}

export const ShowLessItemsPagination: Story = {
  args: {
    showLessItems: true,
  },
}

export const CustomTotalText: Story = {
  args: {
    showTotal: (total, range) => `Showing ${range[0]}-${range[1]} of ${total} items`,
  },
}

export const ExampleBasic: Story = {
  render: () => {
    return (
      <ExampleStory title="Basic pagination.">
        <Pagination defaultCurrent={1} total={50} />
      </ExampleStory>
    )
  },
}

export const ExampleMorePages: Story = {
  render: () => {
    return (
      <ExampleStory title="More Pages.">
        <Pagination defaultCurrent={6} total={500} />
      </ExampleStory>
    )
  },
}

export const ExampleChangePageSize: Story = {
  render: () => {
    const onShowSizeChange: IPaginationProps['onShowSizeChange'] = (current, pageSize) => {
      console.log(current, pageSize)
    }
    return (
      <ExampleStory title="Change pageSize.">
        <Pagination showSizeChanger onShowSizeChange={onShowSizeChange} defaultCurrent={3} total={500} />
        <br />
        <Pagination showSizeChanger onShowSizeChange={onShowSizeChange} defaultCurrent={3} total={500} disabled />
      </ExampleStory>
    )
  },
}

export const ExampleJump: Story = {
  render: () => {
    const onChange: IPaginationProps['onChange'] = pageNumber => {
      console.log('Page: ', pageNumber)
    }
    return (
      <ExampleStory title="Jump to a page directly.">
        <Pagination showQuickJumper defaultCurrent={2} total={500} onChange={onChange} />
        <br />
        <Pagination showQuickJumper defaultCurrent={2} total={500} onChange={onChange} disabled />
      </ExampleStory>
    )
  },
}

export const ExampleMini: Story = {
  render: () => {
    const showTotal: IPaginationProps['showTotal'] = total => `Total ${total} items`
    return (
      <ExampleStory title="Mini size pagination.">
        <Pagination size="small" total={50} />
        <Pagination size="small" total={50} showSizeChanger showQuickJumper />
        <Pagination size="small" total={50} showTotal={showTotal} />
        <Pagination size="small" total={50} disabled showTotal={showTotal} showSizeChanger showQuickJumper />
      </ExampleStory>
    )
  },
}

export const ExampleSimple: Story = {
  render: () => {
    return (
      <ExampleStory title="Simple mode.">
        <Pagination simple defaultCurrent={2} total={50} />
        <br />
        <Pagination disabled simple defaultCurrent={2} total={50} />
      </ExampleStory>
    )
  },
}

export const ExampleControlled: Story = {
  render: () => {
    const [current, setCurrent] = useState(3)
    const onChange: IPaginationProps['onChange'] = page => {
      console.log(page)
      setCurrent(page)
    }
    return (
      <ExampleStory title="Controlled page number.">
        <Pagination current={current} onChange={onChange} total={50} />
      </ExampleStory>
    )
  },
}

export const ExampleTotalNumber: Story = {
  render: () => {
    return (
      <ExampleStory title="You can show the total number of data by setting showTotal.">
        <Pagination total={85} showTotal={total => `Total ${total} items`} defaultPageSize={20} defaultCurrent={1} />
        <br />
        <Pagination
          total={85}
          showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}
          defaultPageSize={20}
          defaultCurrent={1}
        />
      </ExampleStory>
    )
  },
}

export const ExampleShowAll: Story = {
  render: () => {
    return (
      <ExampleStory title="Show all configured prop.">
        <Pagination total={85} showSizeChanger showQuickJumper showTotal={total => `Total ${total} items`} />
      </ExampleStory>
    )
  },
}

export const ExamplePrevNext: Story = {
  render: () => {
    const itemRender: IPaginationProps['itemRender'] = (_, type, originalElement) => {
      if (type === 'prev') {
        return <a>Previous</a>
      }
      if (type === 'next') {
        return <a>Next</a>
      }
      return originalElement
    }
    return (
      <ExampleStory title="Use text link for prev and next button.">
        <Pagination total={500} itemRender={itemRender} />
      </ExampleStory>
    )
  },
}
